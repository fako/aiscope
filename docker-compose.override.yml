services:

  uvicorn:
    build:
      dockerfile: "Dockerfile"
      context: .
      args:  # notice that localhost builds end up in production, but production ignores special UID/GID values
        - UID=${HOST_UID}
        - GID=${HOST_GID}
    command: uvicorn --host 0.0.0.0 --port 8080 --reload --reload-dir . --reload-dir ../datagrowth --reload-exclude .cache aiscope.asgi:application
    stdin_open: true
    tty: true
    environment:
      - PYTHONIOENCODING=UTF-8
      - COLUMNS=80
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=aiscope.settings
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_POSTGRES_PASSWORD=${DJANGO_POSTGRES_PASSWORD}
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - ./aiscope:/usr/src/app
      - ../datagrowth:/usr/src/datagrowth
    depends_on:
      - postgres

  celery:
    build:
      dockerfile: "Dockerfile"
      context: .
      args: # notice that localhost builds end up in production, but production ignores special UID/GID values
        - UID=${HOST_UID}
        - GID=${HOST_GID}
    stdin_open: true
    tty: true
    environment:
      - PYTHONIOENCODING=UTF-8
      - COLUMNS=80
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=aiscope.settings
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_POSTGRES_PASSWORD=${DJANGO_POSTGRES_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./aiscope:/usr/src/app
      - ../datagrowth:/usr/src/datagrowth
    command: watchmedo auto-restart --directory=./ --directory=../datagrowth --pattern=*.py --recursive -- celery -A aiscope worker --loglevel=INFO
    healthcheck:
      test: celery -A aiscope inspect ping
    links:
      - redis:redis
    depends_on:
      - redis
      - postgres
